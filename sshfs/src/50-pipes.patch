diff --git a/sshfs.c b/sshfs.c
index 3d4a479..f15eaa8 100644
--- a/sshfs.c
+++ b/sshfs.c
@@ -1140,7 +1140,8 @@ static void replace_arg(char **argp, const char *newarg)
 static int start_ssh(struct conn *conn)
 {
 	char *ptyname = NULL;
-	int sockpair[2];
+	int parenttochild[2];
+	int childtoparent[2];
 	int pid;
 
 	if (sshfs.password_stdin) {
@@ -1154,24 +1155,25 @@ static int start_ssh(struct conn *conn)
 			return -1;
 	}
 
-	if (socketpair(AF_UNIX, SOCK_STREAM, 0, sockpair) == -1) {
-		perror("failed to create socket pair");
+	if (pipe(parenttochild) != 0 || pipe(childtoparent) != 0) {
+		perror("failed to create pipes");
 		return -1;
 	}
-	conn->rfd = sockpair[0];
-	conn->wfd = sockpair[0];
+	conn->rfd = childtoparent[0];
+	conn->wfd = parenttochild[1];
 
 	pid = fork();
 	if (pid == -1) {
 		perror("failed to fork");
-		close(sockpair[1]);
+		close(parenttochild[0]);
+		close(childtoparent[1]);
 		return -1;
 	} else if (pid == 0) {
 		int devnull;
 
 		devnull = open("/dev/null", O_WRONLY);
 
-		if (dup2(sockpair[1], 0) == -1 || dup2(sockpair[1], 1) == -1) {
+		if (dup2(parenttochild[0], 0) == -1 || dup2(childtoparent[1], 1) == -1) {
 			perror("failed to redirect input/output");
 			_exit(1);
 		}
@@ -1179,8 +1181,10 @@ static int start_ssh(struct conn *conn)
 			dup2(devnull, 2);
 
 		close(devnull);
-		close(sockpair[0]);
-		close(sockpair[1]);
+		close(parenttochild[0]);
+		close(parenttochild[1]);
+		close(childtoparent[0]);
+		close(childtoparent[1]);
 
 		switch (fork()) {
 		case -1:
@@ -1229,7 +1233,8 @@ static int start_ssh(struct conn *conn)
 		_exit(1);
 	}
 	waitpid(pid, NULL, 0);
-	close(sockpair[1]);
+	close(parenttochild[0]);
+	close(childtoparent[1]);
 	return 0;
 }
 
